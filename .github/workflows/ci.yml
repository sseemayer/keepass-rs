---
name: CI on Pull Requests

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5

  doc:
    name: Build Doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt
      - name: run cargo doc
        run: cargo doc

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      - name: typecheck the tests
        run: cargo check --tests
      - name: run cargo check on all feature combinations
        run: cargo hack check --feature-powerset --no-dev-deps

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: run cargo test
        run: cargo test --all-features

  armv7-test:
    name: ARMv7 Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: install armv7 target
        run: rustup target add armv7-unknown-linux-musleabihf

      - name: Install cross
        run: |
          cargo install cross

      - run: |
          cross test --release --target armv7-unknown-linux-musleabihf tests::kdbx4_entry --all-features

  formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      - name: running rustfmt
        run: |
          files=$(find . -name '*.rs')
          IFS=$'\n'; for file in $files; do
            rustfmt --check "$file"
          done

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:0.28.0
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --timeout 120
